import streamlit as st
import pandas as pd
from datetime import date
from plots import *
from joblib import load
from tensorflow.keras.models import load_model
from sklearn.metrics import root_mean_squared_error




#Layout da P√°gina
st.set_page_config(page_title="An√°lise de Mercado Financeiro", layout="wide", page_icon="üìä")


#Configura√ß√£o da barra lateral
with st.sidebar:    
    st.subheader("**An√°lises Financeiras e Previs√µes**", help="P√°gina de An√°lises Financeiras \
             \n e Previs√£o das A√ß√µes da Tesla")
    st.markdown(":blue[**Configura√ß√µes das Visualiza√ß√µes**]", help="Selecione a empresa e o intervalo\
                \n de datas que gostaria de visualizar")
    with st.expander("**Sele√ß√£o de empresas e datas**", expanded=True):
        empresas = ["Tesla", "General Motors", "Ford", "Toyota", "Volkswagen", "BYD"] #Lista de empresas disponibilizadas para an√°lise
        empresa_selecionada = st.selectbox("Selecione a empresa que gostaria de analisar", empresas, index=0)
        data_inicio = st.date_input("Insira a data Inicial", date(2025, 4,10))        
        data_final = st.date_input("Insira a data Final", date.today())                
    st.markdown(":blue[**Selecione o tipo de An√°lise**]", help="Escolha abaixo entre previs√£o e an√°lise")
    with st.expander("Sele√ß√£o das Visualiza√ß√µes", expanded=False):
        tipo = st.radio("An√°lise ou previs√£o de A√ß√µes", ["An√°lise", "Previs√£o"], index=0)
        horizonte_previsao = st.number_input("Quantos dias gostaria de Prever?", min_value=1, max_value=20, value=6, help="Valor M√°ximo de 20 dias")
    processar = st.button("Processar")
        st.markdown( # Rodap√© na barra lateral com as informa√ß√µes do desenvolvedor
        """
        <style>
        .footer {
        background-color: #f8f9fa;
        padding: 15px 20px;
        border-radius: 8px;
        text-align: center;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin-top: 40px;
        color: #343a40;
        }
        .footer a {
        margin: 0 15px;
        display: inline-block;
        }
        .footer img {
        height: 40px;
        width: auto;
        transition: transform 0.3s ease;
        }
        .footer img:hover {
        transform: scale(1.1);
        }
        </style>
        <div class="footer">
        <p><strong>Desenvolvido por: Ronivan</strong></p>
        <a href="https://github.com/Ronizorzan" target="_blank">
            <img src="https://img.icons8.com/ios-filled/50/000000/github.png" alt="GitHub">
        </a>
        <a href="https://www.linkedin.com/in/ronivan-zorzan-barbosa" target="_blank">
            <img src="https://img.icons8.com/color/48/000000/linkedin.png" alt="LinkedIn">
        </a>
        <a href="https://share.streamlit.io/user/ronizorzan" target="_blank">
            <img src="https://images.seeklogo.com/logo-png/44/1/streamlit-logo-png_seeklogo-441815.png" alt="Streamlit Community">
        </a>
        </div>
        """,
        unsafe_allow_html=True)
if processar and tipo == "An√°lise":
    try:
        dados = Gerador_de_graficos(data_inicio, data_final, empresa_selecionada)                 
     
        dados, medias_moveis, variacao_perc = dados.Gerador_de_calculos()            
        grafico_velas = Grafico_velas(dados) #Gr√°fico de Velas j√° vem com todos os c√°lculos e customiza√ß√µes efetivados

        #Atualiza√ß√£o dos eixos e t√≠tulos
        grafico_medias_moveis = Grafico_linhas_tendencia(medias_moveis, True ) #Gr√°fico de M√©dias M√≥veis    
        grafico_medias_moveis.update_layout(title="Identifique a tend√™ncia", xaxis_title="Data", yaxis_title="Valor das A√ß√µes", 
                                                yaxis=(dict(titlefont=dict(size=17), tickformat=",.2f")))
        grafico_medias_moveis.update_traces(text="Data", textposition="top right", hovertemplate="Valor das A√ß√µes: %{y}<br>Data: %{x}")    
        
        #Atualiza√ß√£o dos Eixos e t√≠tulos
        grafico_variacao = Grafico_linhas_tendencia(variacao_perc)  #Gr√°fico de Varia√ß√£o Percentual 
        grafico_variacao.update_layout(title="Descubra a Varia√ß√£o Percentual", 
                                    yaxis_title="Varia√ß√£o Percentual", yaxis=dict(titlefont=dict(size=16), tickformat=",.2f"))
        grafico_variacao.update_traces( hovertemplate="Varia√ß√£o Percentual: %{y}%<br>Data: %{x} ", 
                                    line=dict(color="#07B8FB", width=2))
        grafico_variacao.add_hline(y=0, line_color="white", line_width=1.5, line_dash="dash", annotation_text="Sem Varia√ß√£o",
                                   annotation_position="top left", annotation_font_color="white", annotation_font_size=13) #Linha de refer√™ncia para varia√ß√£o 0%
                
        #Atualiza√ß√£o dos Eixos e t√≠tulos
        grafico_volume = Grafico_barras(dados, "Volume de Negocia√ß√µes")  #Gr√°fico de Volume               
        grafico_volume.update_layout(title="Identifique per√≠odos de maior atividade no mercado", yaxis_title="Volume de Negocia√ß√µes",
                                    xaxis=dict(type="category"), yaxis=dict(titlefont=dict(size=16), tickformat=",.0f"))
        grafico_volume.update_traces(text="Volume de Negocia√ß√µes", textposition="none", hovertemplate="Volume de Negocia√ß√µes: %{y}<br>Data: %{x}")
        
        grafico_boolinger = Grafico_bollinger(dados)    
    
    except Exception as error:
        st.error(f"Erro ao processar os dados: {error}")   
    else:        
        st.title(f"An√°lise das A√ß√µes da {empresa_selecionada} ") 
        tab1, tab2, tab3 = st.tabs(["Gr√°fico de Velas", "An√°lise Estat√≠stica", "An√°lise de Compras e Vendas"])     
        with tab1:              #Exibi√ß√£o do Gr√°fico de Velas
            st.header("Gr√°fico de Velas", divider="green")
            st.plotly_chart(grafico_velas, use_container_width=True)  
            st.markdown(":green[***Descri√ß√£o:***]  *Este painel apresenta uma an√°lise visual detalhada dos valores das a√ß√µes ao longo do per√≠odo selecionado, \
                         utilizando gr√°ficos de velas altamente intuitivos. Cada vela encapsula informa√ß√µes cruciais do mercado: valores de abertura, fechamento, \
                        m√°ximos e m√≠nimos, proporcionando um panorama completo das oscila√ß√µes di√°rias. Al√©m disso, o gr√°fico identifica os dias de maior impacto  \
                        positivo e negativo, permitindo uma an√°lise estrat√©gica. Ferramentas interativas, como zoom e filtros avan√ßados, garantem uma experi√™ncia \
                        personalizada e imersiva. Este recurso √© ideal para acompanhar tend√™ncias, projetar estrat√©gias e tomar decis√µes informadas no mercado financeiro.*")
                  
            
        with tab2:   
                st.subheader("An√°lises Estat√≠sticas", divider="blue")    
                col1, col2 = st.columns(2)
                with col1:                                
                    st.plotly_chart(grafico_medias_moveis, use_container_width=True)
                    st.markdown(":blue[***Prop√≥sito:***] *Este gr√°fico apresenta o valor das a√ß√µes ao longo do per√≠odo de tempo selecionado,\
                                 usando uma m√©dia m√≥vel. A m√©dia m√≥vel suaviza as oscila√ß√µes di√°rias nos pre√ßos das a√ß√µes, eliminando 'ru√≠dos' e\
                                 tornando mais f√°cil identificar tend√™ncias gerais, como aumento, queda ou estabilidade no pre√ßo.\
                                Para elevar ainda mais o valor da an√°lise, uma linha de tend√™ncia √© tra√ßada, dando uma interpreta√ß√£o \
                                praticamente instant√¢nea da tend√™ncia geral das a√ß√µes.*")
                    st.markdown(":blue[***O que observar?***]")
                    st.markdown(":green[**Subidas Constantes:**] *Podem indicar valoriza√ß√£o cont√≠nua das a√ß√µes*")
                    st.markdown(":orange[**Per√≠odos de Estabilidade:**] *Indicam que o pre√ßo n√£o est√° variando muito, sugerindo equil√≠brio*")
                    st.markdown(":red[**Quedas Frequentes:**] *Podem sugerir per√≠odos de desvaloriza√ß√£o*" )
                        

                with col2:
                    st.plotly_chart(grafico_variacao, use_container_width=True)
                    st.markdown(":blue[***Prop√≥sito:***] *Este gr√°fico calcula o quanto o pre√ßo das a√ß√µes mudou, em termos percentuais, de um dia de fechamento para o outro. \
                                Diferente das varia√ß√µes calculadas dentro de um √∫nico dia, como a do gr√°ifco de Velas (valor de abertura versus fechamento),\
                                este gr√°fico destaca a mudan√ßa geral entre dias consecutivos.*")
                    st.markdown(":blue[***O que observar?***]")
                    st.markdown(":green[***Varia√ß√µes Positivas***] *Indicam aumento nas a√ß√µes em rela√ß√£o ao dia anterior*")
                    st.markdown(":orange[***Mudan√ßas Bruscas***] *Apontam poss√≠veis eventos ou not√≠cias que impactaram o mercado*")
                    st.markdown(":red[***Mudan√ßas Negativas***] *Mostram que o pre√ßo das a√ß√µes caiu em rela√ß√£o ao dia anterior*")

        with tab3:    
            st.subheader("An√°lises de Volume e Bollinger", divider="blue")
            col1, col2 = st.columns(2, gap="small")
            with col1:
                st.plotly_chart(grafico_volume, use_container_width=True) 
                st.markdown(":green[***Descri√ß√£o:***] *Este gr√°fico mostra a quantidade de a√ß√µes negociadas diariamente dentro do per√≠odo selecionado. \
                            Barras mais altas indicam dias em que houve maior movimenta√ß√£o dos investidores, ou seja, quando mais pessoas compraram ou venderam a√ß√µes. \
                            Isso ajuda a entender quais dias tiveram maior engajamento e atividade no mercado financeiro, destacando os momentos que podem ter \
                            sido influenciados por not√≠cias,eventos econ√¥micos ou decis√µes empresariais importantes.* ")

            with col2:
                st.plotly_chart(grafico_boolinger, use_container_width=True)
                st.markdown(":green[***Descri√ß√£o:***] *Este gr√°fico utiliza tr√™s linhas para apresentar a evolu√ß√£o do pre√ßo das a√ß√µes ao longo do per√≠odo: \
                            o valor de fechamento di√°rio e duas faixas chamadas banda superior e banda inferior. Essas faixas, conhecidas como ‚ÄúBandas de Bollinger‚Äù,\
                            destacam os momentos de maior instabilidade no mercado, onde o pre√ßo das a√ß√µes varia mais do que o normal.\
                            Isso √© √∫til para identificar tend√™ncias e per√≠odos de risco ou oportunidade, especialmente para investidores que buscam aproveitar essas oscila√ß√µes.*")


elif processar and tipo== "Previs√£o":
    st.subheader("Previs√£o de A√ß√µes da Tesla", divider="blue")
    col1, col2 = st.columns([0.55,0.45], gap="medium")
    with col1:
        dados = pd.read_csv("dados_teste.csv")                   
        
        
        grafico_previsoes = Grafico_linhas_previsoes(dados)
        rmse = root_mean_squared_error(dados["Valores Reais"], dados["Previs√µes"])
        grafico_previsoes.update_layout(xaxis_title=f"Erro do Modelo (RMSE): {rmse:.2f} ", yaxis=dict(titlefont=dict(size=16), tickformat=",.2f"), 
                                        title="Compara√ß√£o Previs√£o do Modelo x Valores Reais")
        st.plotly_chart(grafico_previsoes, use_container_width=True)    
        st.markdown(":blue[***Prop√≥sito:***] *Previs√£o de Alta Precis√£o para A√ß√µes da Empresa. Explore um painel inovador que transforma dados em insights financeiros valiosos.\
                Com uma interface que combina praticidade e an√°lise robusta, visualize compara√ß√µes entre valores reais e previstos, enquanto projeta tend√™ncias futuras com base em algoritmos de ponta.\
                Do desempenho hist√≥rico √†s previs√µes futuras, mergulhe nos gr√°ficos que revelam a verdadeira ess√™ncia do mercado financeiro.\
                Com indicadores como RMSE, avalie a acur√°cia e tenha uma id√©ia concreta da confiabilidade do modelo.*")
        

    with col2:
        modelo = load_model("Modelo_treinado_close.keras")
        scaler = load("scaler_close.joblib")         
        novas_previsoes = Gerador_Previsoes_RN(horizonte_previsao, dados["Valores Reais"], modelo, scaler, 30)
        novas_previsoes_df = pd.DataFrame({"Previs√µes Futuras": novas_previsoes.flatten()}, 
                                        index=pd.date_range("2025-04-28", periods=len(novas_previsoes), freq="B"))
        novas_previsoes_df.reset_index(inplace=True) #Reinicia o √≠ndice para que a data fique na primeira coluna
        novas_previsoes_df.rename(columns={"index": "Date"}, inplace=True) #Renomeia a coluna de data para "Data"
        grafico_novas_previsoes = Grafico_linhas_tendencia(novas_previsoes_df, True, coluna= "Previs√µes Futuras")
        grafico_novas_previsoes.update_layout(xaxis_title="Data", yaxis_title="Valor das A√ß√µes", 
                                        yaxis=dict(titlefont=dict(size=16), tickformat=",.2f"), title="Previs√µes Futuras das A√ß√µes da Tesla")
        st.plotly_chart(grafico_novas_previsoes, use_container_width=True)               
        st.markdown(":blue[***Prop√≥sito:***] *Este gr√°fico oferece a op√ß√£o de gerar previs√µes futuras permitindo extrapolar al√©m dos dados hist√≥ricos dispon√≠veis. \
                    Mas observe que essas previs√µes s√£o obtidas atrav√©s de uma Rede Neural ‚Äî que integra Redes Neurais Convolucionais para captar padr√µes e Redes Neurais Recorrentes para modelar depend√™ncias temporais.\
                    √â importante ressaltar que, para gerar essas proje√ß√µes, o modelo utiliza uma estrat√©gia iterativa, ou seja, suas pr√≥prias previs√µes servem de entrada\
                    para estimar eventos subsequentes. Essa abordagem pode levar ao chamado 'Erro Acumulado', que tende a se intensificar √† medida que as previs√µes se estendem para horizontes mais distantes.\
                    Portanto, embora essas previs√µes utilizem t√©cnicas avan√ßadas e ofere√ßam uma vis√£o poderosa sobre o futuro, √© recomend√°vel utiliz√°-las\
                    com cautela e sempre considerar an√°lises adicionais para tomar decis√µes mais embasadas.*")         
        
     

     
        
        
             
              
            

    


    

